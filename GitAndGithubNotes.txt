Git and Github:

Git data is stored on the cloud i.e. Github.

Git Commands: 

git --version - check the git version
git init - init a git repository
U - stands for untracked files
git add index.html - added a file to staging env.
git commit -m "intro of git" -> creating a log of code changes
we can track the changes that we have done.
git add . - add all the fies to the stage
git log - lists all the commits
Ctrl + l - clear the terminal
git reset --hard cfffa8db45cb625ff2c5ffdad4e31333d8d38054 - Clear the updated code from the VS Code and go to the updated version, this command will point the head to the specified commit id
git reset --soft cfffa8db45cb625ff2c5ffdad4e31333d8d38054 - Go to the updated version of code without clearing the updated code from VS Code, this command will point the head to the specified commit id

Github:
Create a new Repo on github.com.
git remote add origin https://github.com/ankitadk/CodeKaroMernStack.git - add a remote origin i.e. the place where the code needs to be pushed.
git branch -M main - rename the master branch to main.
git push -u origin main - push your code to the remote branch namely 'main'.

git clone https://github.com/ankitadk/CodeKaroMernStack.git - Create a new folder and clone the project.
git pull - pull all the changes from remote repo to the current repo.

Hosting project inside Git:
Go to the Project folder. Click on Settings. Click on Pages. Select branchname (main) for the deployment. Click on Save.
A new project link will be created. Refresh the page and Project link will be available.

Git Branching:
git branch - shows the list of available branches in the code repo.
git branch test - creates a new branch with the name as "test".
git checkout test - Command used to switch to branch 'test'.
Merging code to the main branch: Switch to the main branch and use the below command.
git merge test - will merge the code from the 'test' branch to the main branch 'main'.
